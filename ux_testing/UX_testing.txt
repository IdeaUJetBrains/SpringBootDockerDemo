
Congrats, you got a job making an application for the local bus service. The last developer already got started making this application,
so let's set up our dev environment, and get running what she already made. It's a spring boot application, and she kindly provided
a database image with some data already pre-populated.

The database image's name is: opavlova/db-mysql:5.7-test
It's a MySQL database, so it's available at port 3306, and the default username and password haven't been changed: root/root.

The goal for today: make sure we can build the application with maven inside the container, and run it correctly.
To see that it works, post a new bus route to: http://127.0.0.1:<app_host_port>/entitybus/post

If you haven't used Spring Boot before, the DB connection string is in: src\main\resources\application.properties




STEP1:
Run mysql database opavlova/db-mysql:5.7-test
Look at the content of the “entitybus” table.

Container port: 3306
db name: DOCKERDB
password: root
login: root


STEP2:
Run the spring boot application with the database that you have set up on the previous level
( url: jdbc:mysql://0.0.0.0:13306/DOCKERDB )

This is a simple spring boot application: takes buses from the table and lists them on the page
Description:
-Working table in the mysql database: entitybus
-Upon executing GET request at http://127.0.0.1:<app_host_port>/entitybus/post a new entry is added to the entrybus table


STEP3:
Build(maven) and run the application inside the container with the connection to the container mysql database.
Check that app is working ok (for example, go to http://localhost:<app_host_port>/entitybus)








//===================================================================================================//

Tipps:
TO STEP 1:
	To connect to the database via console:
mysql -u root -p
show databases;
use DOCKERDB;



TO STEP 2:
Spring boot application properties with urls: src\main\resources\application.properties
//Todo: If you don’t know SP then write the needed port here… etc



TO STEP 3:
-  build demo-0.0.1-SNAPSHOT.jar from sources using maven:

#copy the project sources into any container folder
COPY . /project
#and build the application jar
RUN  cd /project && mvn package

- run the app, for example: java  -jar /project/target/demo-0.0.1-SNAPSHOT.jar

Connection url to post a new entry into the table: http://127.0.0.1:<app_host_port>/entitybus/post
Database: jdbc:mysql://0.0.0.0:<db_host_port>/DOCKERDB


